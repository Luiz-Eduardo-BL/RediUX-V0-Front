[{"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\App.js":"1","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\03Conteudo\\Conteudo.jsx":"2","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\10ResultadosPesquisa\\ResultadosPesquisas.jsx":"3","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\04Login\\Login.jsx":"4","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\firebase.js":"5","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\04Login\\GlobalStateContext.jsx":"6","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\index.js":"7","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\00TollbarADM\\TollbarADM.jsx":"8","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\07Cadastar\\Cadastrar.jsx":"9","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\06ConteudoADM\\ConteudoADM.jsx":"10","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\reportWebVitals.js":"11","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\01Home\\Home.jsx":"12","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\02ListaConteudos\\ListaConteudos.jsx":"13","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Livro.jsx":"14","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Artigo.jsx":"15","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Video.jsx":"16","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Podcast.jsx":"17","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\08Editar\\Editar.jsx":"18","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\05ListaADM\\ListaConteudosADM.jsx":"19","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\00ToolbarU\\Toolbar.jsx":"20"},{"size":2346,"mtime":1699630337380,"results":"21","hashOfConfig":"22"},{"size":10324,"mtime":1700502583897,"results":"23","hashOfConfig":"22"},{"size":8705,"mtime":1700583249660,"results":"24","hashOfConfig":"22"},{"size":4545,"mtime":1699631665579,"results":"25","hashOfConfig":"22"},{"size":562,"mtime":1699883802737,"results":"26","hashOfConfig":"22"},{"size":667,"mtime":1699623337101,"results":"27","hashOfConfig":"22"},{"size":787,"mtime":1700492103936,"results":"28","hashOfConfig":"22"},{"size":1472,"mtime":1699631636788,"results":"29","hashOfConfig":"22"},{"size":11392,"mtime":1700578439499,"results":"30","hashOfConfig":"22"},{"size":6303,"mtime":1700502765609,"results":"31","hashOfConfig":"22"},{"size":375,"mtime":1696475630727,"results":"32","hashOfConfig":"22"},{"size":8875,"mtime":1696475630701,"results":"33","hashOfConfig":"22"},{"size":13487,"mtime":1696475630702,"results":"34","hashOfConfig":"22"},{"size":12178,"mtime":1696475630714,"results":"35","hashOfConfig":"22"},{"size":12167,"mtime":1696475630713,"results":"36","hashOfConfig":"22"},{"size":12177,"mtime":1696475630716,"results":"37","hashOfConfig":"22"},{"size":12168,"mtime":1696475630715,"results":"38","hashOfConfig":"22"},{"size":10165,"mtime":1696475630712,"results":"39","hashOfConfig":"22"},{"size":6922,"mtime":1696475630708,"results":"40","hashOfConfig":"22"},{"size":438,"mtime":1696475630699,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"3hm6w3",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"46"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"46"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\App.js",["111"],[],"// import Tollbar from \"./components/00ToolbarU/Toolbar\";\r\n// import Tollbaradm from \"./components/00TollbarADM/TollbarADM\";n\r\n\r\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\nimport Home from \"./components/01Home/Home\";\r\nimport ListaConteudos from \"./components/02ListaConteudos/ListaConteudos\";\r\nimport Conteudo from \"./components/03Conteudo/Conteudo\";\r\nimport Livro from \"./components/09PagMidias/Livro\";\r\nimport Artigo from \"./components/09PagMidias/Artigo\";\r\nimport Podcast from \"./components/09PagMidias/Podcast\";\r\nimport Video from \"./components/09PagMidias/Video\";\r\n\r\nimport Login from \"./components/04Login/Login\";\r\nimport ListaConteudosADM from \"./components/05ListaADM/ListaConteudosADM\";\r\nimport ConteudoADM from \"./components/06ConteudoADM/ConteudoADM\";\r\nimport Cadastrar from \"./components/07Cadastar/Cadastrar\";\r\nimport Editar from \"./components/08Editar/Editar\";\r\nimport ResultadosPesquisas from \"./components/10ResultadosPesquisa/ResultadosPesquisas\"\r\nimport { useGlobalState } from \"./components/04Login/GlobalStateContext\";\r\n\r\nfunction App() {\r\n\r\n  const { globalState } = useGlobalState();\r\n  const { estaAutenticado } = globalState;\r\n\r\n  return (\r\n    <Routes>\r\n      <Route element={<Home />} path=\"/\" exact />\r\n      <Route element={<ListaConteudos />} path=\"/Pesquisa\" />\r\n      <Route element={<Conteudo />} path=\"/Conteudo\" />\r\n      <Route element={<Livro />} path=\"/Livros\" />\r\n      <Route element={<Artigo />} path=\"/Artigos\" />\r\n      <Route element={<Podcast />} path=\"/Podcasts\" />\r\n      <Route element={<Video />} path=\"/Videos\" />\r\n\r\n      <Route\r\n        path=\"/ADM/Login\"\r\n        element={estaAutenticado ? (<Navigate to=\"/ADM/ListaConteudos\" />) : (<Login />)}\r\n      />\r\n      <Route\r\n        path=\"/ADM/ListaConteudos\"\r\n        element={estaAutenticado ? <ListaConteudosADM /> : <Login />}\r\n      />\r\n\r\n      <Route\r\n        path=\"/ADM/Conteudo/:id\"\r\n        element={estaAutenticado ? <ConteudoADM /> : <Login />}\r\n      />\r\n      <Route \r\n        path=\"/ADM/Cadastrar\"\r\n        element={estaAutenticado ? <Cadastrar /> : <Login />}\r\n      />\r\n      <Route\r\n      path=\"/ADM/Editar/:id\"\r\n      element={estaAutenticado ? <Editar /> : <Login />}\r\n      />\r\n\r\n      <Route element={<ResultadosPesquisas />} path=\"/results\" />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\03Conteudo\\Conteudo.jsx",["112"],[],"import { Box, Button, Stack,  Container, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Typography } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport { ArrowBackIosNew } from \"@mui/icons-material\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\nimport Tollbaradm from \"../00TollbarADM/TollbarADM\"\r\n\r\nconst Conteudo = () => {\r\n\r\n    const [titulo, setTitulo] = useState(\"\")\r\n    const [autor, setAutor] = useState(\"\")\r\n    const [descricao, setDescricao] = useState(\"\")\r\n    const [link, setLink] = useState(\"\")\r\n    const [tags, setTags] = useState({ carreira: false, fundamentosUX: false, designInteracao: false, UI: false, arquitetura: false })\r\n    const [midia, setMidia] = useState({ livro: false, artigo: false, video: false, podcast: false })\r\n    //const [file, setFile] = useState(null)\r\n    const [imgUrl, setImgUrl] = useState([])\r\n\r\n    const { carreira, fundamentosUX, designInteracao, UI, arquitetura } = tags\r\n    const { livro, artigo, video, podcast } = midia\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(`http://localhost:3001/contents/retrieve/${id}`)\r\n                .then(\r\n                    (response) => {\r\n                        setTitulo(response.data.titulo)\r\n                        setAutor(response.data.autor)\r\n                        setDescricao(response.data.descricao)\r\n                        setLink(response.data.link)\r\n                        setTags(response.data.tags)\r\n                        setMidia(response.data.midia)\r\n                        setImgUrl(response.data.imgUrl)\r\n                    }\r\n                )\r\n                .catch(error => console.log(error))\r\n        }\r\n        ,\r\n        []\r\n    )\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const conteudo = { titulo, autor, descricao, link, tags, midia, imgUrl }\r\n        axios.put(`http://localhost:3001/contents/update/${id}`, conteudo)\r\n            .then(\r\n                (response) => {\r\n                    alert(`Conteúdo  ${response.data._id} atualizado com sucesso!`)\r\n                    navigate(\"/ADM/ListaConteudos\")\r\n                }\r\n            )\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    function handleCheckBoxTags(event) {\r\n        setTags(\r\n            {\r\n                ...tags,\r\n                [event.target.name]: event.target.checked\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleCheckBoxMidia(event) {\r\n        setMidia(\r\n            {\r\n                ...midia,\r\n                [event.target.name]: event.target.checked\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tollbaradm />\r\n\r\n            <Container\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n\r\n                <Link to=\"/ADM/ListaConteudos\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"medium\"\r\n                        startIcon={<ArrowBackIosNew />}\r\n                        sx={{\r\n                            mr: 70,\r\n                            mt: 5,\r\n                            color: \"#131313\"\r\n                        }}\r\n                    >\r\n                        Voltar\r\n                    </Button>\r\n                </Link>\r\n\r\n\r\n                <Typography variant=\"h4\" fontWeight=\"bold\" mt={2}>\r\n                    Editar Conteúdo: {titulo}\r\n                </Typography>\r\n\r\n                <Box\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit}\r\n                    mt={5}\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"titulo\"\r\n                        label=\"Título\"\r\n                        name=\"titulo\"\r\n                        onChange={(event) => setTitulo(event.target.value)}\r\n                        value={titulo}\r\n                        sx={{\r\n                            width: 640,\r\n                            my: 2,\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"autor\"\r\n                        label=\"Autor\"\r\n                        name=\"autor\"\r\n                        onChange={(event) => setAutor(event.target.value)}\r\n                        value={autor}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"descricao\"\r\n                        label=\"Descrição\"\r\n                        name=\"descricao\"\r\n                        onChange={(event) => setDescricao(event.target.value)}\r\n                        value={descricao}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"link\"\r\n                        label=\"Link\"\r\n                        name=\"link\"\r\n                        onChange={(event) => setLink(event.target.value)}\r\n                        value={link}\r\n                    />\r\n                    \r\n                    <Stack\r\n                        sx={{\r\n                            width: 640,\r\n                            backgroundColor: \"#F0F0F0\",\r\n                            borderRadius: 1,\r\n                            borderBottom: 1,\r\n                            borderColor: \"#8B8B8B\",\r\n                            my: 2,\r\n                        }}\r\n                    >\r\n\r\n\r\n\r\n                    <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                        <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Tags</FormLabel>\r\n                        <FormGroup>\r\n                            <FormControlLabel control={<Checkbox checked={carreira} name=\"carreira\" onChange={handleCheckBoxTags} />} label=\"Carreira\" />\r\n                            <FormControlLabel control={<Checkbox checked={fundamentosUX} name=\"fundamentosUX\" onChange={handleCheckBoxTags} />} label=\"Fundamentos de UX\" />\r\n                            <FormControlLabel control={<Checkbox checked={designInteracao} name=\"designInteracao\" onChange={handleCheckBoxTags} />} label=\"Design de Interação\" />\r\n                            <FormControlLabel control={<Checkbox checked={UI} name=\"UI\" onChange={handleCheckBoxTags} />} label=\"UI Design\" />\r\n                            <FormControlLabel control={<Checkbox checked={arquitetura} name=\"arquitetura\" onChange={handleCheckBoxTags} />} label=\"Arquitetura da Informação\" />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n\r\n                    </Stack>\r\n\r\n                    <Stack\r\n                        sx={{\r\n                            width: 640,\r\n                            backgroundColor: \"#F0F0F0\",\r\n                            borderRadius: 1,\r\n                            borderBottom: 1,\r\n                            borderColor: \"#8B8B8B\",\r\n                            my: 2,\r\n                        }}\r\n                    >\r\n\r\n                    <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                        <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Tipo de Mídia</FormLabel>\r\n                        <FormGroup>\r\n                            <FormControlLabel control={<Checkbox checked={livro} name=\"livro\" onChange={handleCheckBoxMidia} />} label=\"Livro\" />\r\n                            <FormControlLabel control={<Checkbox checked={artigo} name=\"artigo\" onChange={handleCheckBoxMidia} />} label=\"Artigo\" />\r\n                            <FormControlLabel control={<Checkbox checked={video} name=\"video\" onChange={handleCheckBoxMidia} />} label=\"Video\" />\r\n                            <FormControlLabel control={<Checkbox checked={podcast} name=\"podcast\" onChange={handleCheckBoxMidia} />} label=\"Podcast\" />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n\r\n                     </Stack>\r\n\r\n                    <Box sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        mt: 2\r\n                    }}>\r\n                        <Link to=\"/ADM/ListaConteudos\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                sx={{\r\n                                    mx: 2,\r\n                                    color: \"#0C2D8A\",\r\n                                    borderColor: \"#0C2D8A\",\r\n                                }}\r\n                            >\r\n                                Cancelar\r\n                            </Button>\r\n                        </Link>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            sx={{\r\n                                mb: 2,\r\n                                backgroundColor: \"#0C2D8A\",\r\n                                color: \"#BECBEA\",\r\n                                boxShadow: 0,\r\n                                '&:hover': {\r\n                                    backgroundColor: \"#BECBEA\",\r\n                                    color: \"#0C2D8A\",\r\n                                    boxShadow: 0,\r\n                                },\r\n                            }}\r\n                        >\r\n                            Atualizar\r\n                        </Button>\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Conteudo","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\10ResultadosPesquisa\\ResultadosPesquisas.jsx",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\04Login\\Login.jsx",["113"],[],"import { Container, Box, Button, TextField } from \"@mui/material\"\r\nimport Logo from \"./logo.svg\"\r\nimport Ilustracao from \"./ilustracao.svg\"\r\nimport {signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { auth } from '../../firebase'\r\nimport { useGlobalState } from \"./GlobalStateContext\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst Login = () => {\r\n    const { globalState, setGlobalState } = useGlobalState();\r\n    const { user, password } = globalState;\r\n  \r\n    const handleUserChange = (e) => {\r\n      const newUser = e.target.value;\r\n      setGlobalState((prevGlobalState) => ({\r\n        ...prevGlobalState,\r\n        user: newUser,\r\n      }));\r\n    };\r\n  \r\n    const handlePasswordChange = (e) => {\r\n      const newPassword = e.target.value;\r\n      setGlobalState((prevGlobalState) => ({\r\n        ...prevGlobalState,\r\n        password: newPassword,\r\n      }));\r\n    };\r\n\r\n    const saveAuthToLocalStorage = (authData) => {\r\n        localStorage.setItem(\"authData\", JSON.stringify(authData));\r\n      };\r\n      \r\n      \r\n      const getAuthFromLocalStorage = () => {\r\n        const authData = localStorage.getItem(\"authData\");\r\n        return authData ? JSON.parse(authData) : null;\r\n      };\r\n  \r\n      const signIn = (e) => {\r\n        e.preventDefault();\r\n        signInWithEmailAndPassword(auth, user, password)\r\n          .then((userCredential) => {\r\n            const authData = {\r\n              user: userCredential.user,\r\n            };\r\n            setGlobalState((prevGlobalState) => ({\r\n              ...prevGlobalState,\r\n              estaAutenticado: true,\r\n            }));\r\n            saveAuthToLocalStorage(authData); \r\n          })\r\n          .catch((error) => {\r\n            setGlobalState((prevGlobalState) => ({\r\n              ...prevGlobalState,\r\n              estaAutenticado: false,\r\n            }));\r\n          });\r\n      };\r\n      \r\n      useEffect(() => {\r\n        const authData = getAuthFromLocalStorage();\r\n        if (authData) {\r\n          setGlobalState((prevGlobalState) => ({\r\n            ...prevGlobalState,\r\n            estaAutenticado: true,\r\n          }));\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <Container\r\n            sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                mt: 10,\r\n            }}\r\n        >\r\n            <Box>\r\n                <img\r\n                    src={Ilustracao}\r\n                    alt=\"Ilustração\"\r\n                    width={500}\r\n                />\r\n            </Box>\r\n\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"#E9ECEF\",\r\n                    padding: 6,\r\n                    borderRadius: 2,\r\n                }}\r\n            >\r\n                <img\r\n                    src={Logo}\r\n                    alt=\"Logo\"\r\n                    height={75}\r\n                />\r\n\r\n                <TextField\r\n                    required\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    autoFocus\r\n\r\n                    label=\"Nome de Usuário\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    type=\"username\"\r\n                    value={user}\r\n                    onChange={handleUserChange}\r\n                />\r\n\r\n                <TextField\r\n                    required\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n\r\n                    label=\"Senha\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                />\r\n\r\n                <Button\r\n                    onClick={signIn}\r\n\r\n                    sx={{\r\n                        width: 280,\r\n                        my: 2,\r\n                        backgroundColor: \"#0C2D8A\",\r\n                        color: \"#BECBEA\",\r\n                        boxShadow: \"none\",\r\n                        '&:hover': {\r\n                            backgroundColor: \"#BECBEA\",\r\n                            color: \"#0C2D8A\",\r\n                            boxShadow: \"none\",\r\n                        }\r\n                    }}\r\n                    variant=\"contained\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\nexport default Login\r\n","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\firebase.js",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\04Login\\GlobalStateContext.jsx",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\index.js",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\00TollbarADM\\TollbarADM.jsx",["114"],[],"import { Button, Toolbar } from \"@mui/material\";\r\nimport Logo from \"./logo-sml.svg\";\r\nimport { Logout } from \"@mui/icons-material\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Tollbaradm = () => {\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"authData\");\r\n    window.location.reload()\r\n  };\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                backgroundColor: \"#CED4DA\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n            }}\r\n        >\r\n            \r\n            <a href=\"/ADM/ListaConteudos\">\r\n                <img src={Logo} height={38} alt=\"logo\" />\r\n            </a>\r\n\r\n            <Link to=\"/ADM/Login\">\r\n                <Button\r\n                    onClick={handleLogout}\r\n                    variant=\"outlined\"\r\n                    startIcon={<Logout />}\r\n                    sx={{\r\n                        boxShadow: \"none\",\r\n                        borderColor: \"#DC3545\",\r\n                        color: \"#DC3545\",\r\n                        '&:hover': {\r\n                            backgroundColor: \"#DC3545\",\r\n                            borderColor: \"#DC3545\",\r\n                            color: \"#F5f5f5\",\r\n                            boxShadow: \"none\",\r\n                        }\r\n                    }}\r\n                >\r\n                    Logout\r\n                </Button>\r\n            </Link>\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default Tollbaradm","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\07Cadastar\\Cadastrar.jsx",["115"],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\06ConteudoADM\\ConteudoADM.jsx",["116","117","118","119","120","121","122","123","124","125","126","127"],[],"import { Box, Chip, Container, Button, Typography, Stack } from \"@mui/material\";\r\nimport { InsertDriveFileOutlined, InsertLink, List, PersonOutline, ArrowBackIosNew } from \"@mui/icons-material\";\r\nimport folder from \"./folder.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Tollbaradm from \"../00TollbarADM/TollbarADM\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\n\r\nconst ConteudoADM = () => {\r\n\r\n    const [titulo, setTitulo] = useState(\"\")\r\n    const [autor, setAutor] = useState(\"\")\r\n    const [descricao, setDescricao] = useState(\"\")\r\n    const [link, setLink] = useState(\"\")\r\n    const [tags, setTags] = useState({ carreira: false, fundamentosUX: false, designInteracao: false, UI: false, arquitetura: false })\r\n    const [midia, setMidia] = useState({ livro: false, artigo: false, video: false, podcast: false })\r\n    const [imgUrl, setImgUrl] = useState([])\r\n\r\n    const { carreira, fundamentosUX, designInteracao, UI, arquitetura } = tags\r\n    const { livro, artigo, video, podcast } = midia\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(`http://localhost:3001/contents/retrieve/${id}`)\r\n                .then(\r\n                    (response) => {\r\n                        setTitulo(response.data.titulo)\r\n                        setAutor(response.data.autor)\r\n                        setDescricao(response.data.descricao)\r\n                        setLink(response.data.link)\r\n                        setTags(response.data.tags)\r\n                        setMidia(response.data.midia)\r\n                        setImgUrl(response.data.imgUrl)\r\n                    }\r\n                )\r\n                .catch(error => console.log(error))\r\n        }\r\n        ,\r\n        []\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Tollbaradm />\r\n\r\n            <Container>\r\n                <Box\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"left\",\r\n                        mt: 5,\r\n                    }}\r\n                >\r\n\r\n                    <Link to=\"/ADM/ListaConteudos\">\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            size=\"medium\"\r\n                            startIcon={<ArrowBackIosNew />}\r\n                            sx={{\r\n                                mr: 70,\r\n                                mt: 5,\r\n                                color: \"#131313\"\r\n                            }}\r\n                        >\r\n                            Voltar\r\n                        </Button>\r\n                    </Link>\r\n                </Box>\r\n\r\n                <Container\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <Box>\r\n                        <Stack\r\n                            mt={5}\r\n                        >\r\n                            <Typography variant=\"h6\" component=\"h1\" color=\"#0C2D8A\">\r\n                                {titulo}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" component=\"h2\">\r\n                                {descricao}\r\n                            </Typography>\r\n                        </Stack>\r\n\r\n                        <Stack\r\n                            direction=\"row\"\r\n                            spacing={1}\r\n                            mt={2}\r\n                            mb={2}\r\n                        >\r\n                            <PersonOutline />\r\n                            <Typography variant=\"body1\" component=\"body1\" fontWeight={500}>\r\n                                Autor: {autor}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" component=\"body1\">\r\n                            \r\n                            </Typography>\r\n                        </Stack>\r\n\r\n                        <Stack\r\n                            direction=\"row\"\r\n                            spacing={1}\r\n                            mb={2}\r\n                        >\r\n                            <List />\r\n                            <Typography variant=\"body1\" component=\"body1\" fontWeight={500}>\r\n                                Tags:\r\n                            </Typography>\r\n                            <Chip label=\"Tags\" sx={{ backgroundColor: \"#BECBEA\", color: \"0C2D8A\", height: \"auto\" }} />\r\n                            <Chip label=\"Tags\" sx={{ backgroundColor: \"#FFB1B1\", color: \"#BF4040\", height: \"auto\" }} />\r\n                        </Stack>\r\n                        <Stack\r\n                            direction=\"row\"\r\n                            spacing={1}\r\n                            mb={2}\r\n                        >\r\n                            <InsertDriveFileOutlined />\r\n                            <Typography variant=\"body1\" component=\"body1\" fontWeight={500}>\r\n                                Mídia:\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" component=\"body1\">\r\n                                Artigo\r\n                            </Typography>\r\n                        </Stack>\r\n                        <Stack\r\n                            direction=\"row\"\r\n                            spacing={1}\r\n                        >\r\n                            <InsertLink />\r\n                            <Typography variant=\"body1\" component=\"body1\" fontWeight={500}>\r\n                                Link:\r\n                            </Typography>\r\n                            <Link href= {link} ml={1}>Ir para o conteúdo</Link>\r\n                        </Stack>\r\n                    </Box>\r\n                    <Box mt={5} ml={5}>\r\n                        <img\r\n                            src={folder}\r\n                            alt=\"Capa do Conteúdo\"\r\n                            height={240}\r\n                        />\r\n                    </Box>\r\n                </Container>\r\n            </Container >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConteudoADM","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\reportWebVitals.js",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\01Home\\Home.jsx",["128","129","130"],[],"import { Button, Box, Container, InputAdornment, TextField, FormControl, InputLabel, Select, MenuItem, Typography, Divider } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useState } from \"react\";\r\nimport Logo from \"./logo.svg\";\r\nimport { Article, Book, Mic, SmartDisplay } from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tollbar from \"../00ToolbarU/Toolbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [midia, setMidia] = useState({ livro: false, artigo: false, video: false, podcast: false })\r\n\r\n    const handleChange = (event) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleMidiaChange = (event) => {\r\n        setMidia(event.target.value);\r\n      };\r\n      \r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const searchTerm = search.trim();\r\n        if (searchTerm) {\r\n            const url = `/results?term=${searchTerm}`;\r\n            window.location.href = url;\r\n          }\r\n        };\r\n\r\n    const [tag, setTag] = useState('');\r\n\r\n    const tagChange = (event) => {\r\n        setTag(event.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Tollbar />\r\n\r\n            <Container maxWidth=\"md\" sx={{ mt: 20 }}>\r\n                <Box\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        margin: 10,\r\n                        height: 90\r\n                    }}\r\n                >\r\n                    <img src={Logo} alt=\"Logo\" height={100}/>\r\n                </Box>\r\n\r\n                <Box\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\"\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        id=\"search\"\r\n                        type=\"search\"\r\n                        label=\"Pesquisar Conteúdo\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                        sx={{ width: 600 }}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Link to=\"/Pesquisa\">\r\n                                        <Button\r\n                                            sx={{ height: 55 }}\r\n                                            onClick={handleSubmit}\r\n                                        >\r\n                                            <SearchIcon />\r\n                                        </Button>\r\n                                    </Link>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n\r\n                    <FormControl vairant=\"primary\">\r\n                        <InputLabel id=\"demo-simple-select-filled-label\">Tags</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            value={tag}\r\n                            onChange={tagChange}\r\n                            sx={{\r\n                                width: 200,\r\n                                ml: 1,\r\n                            }}\r\n                        >\r\n                            <MenuItem\r\n                                value=\"\"\r\n                            >\r\n                            </MenuItem>\r\n                            <MenuItem value={\"Carreira\"}>Carreira</MenuItem>\r\n                            <MenuItem value={\"FundamentosDeUX\"}>Fundamentos de UX</MenuItem>\r\n                            <MenuItem value={\"DesignDeInteração\"}>Design de Interação</MenuItem>\r\n                            <MenuItem value={\"UIDesign\"}>UI Design</MenuItem>\r\n                            <MenuItem value={\"ArquiteturaDaInformacao\"}>Arquitetura da Informação</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n\r\n                <Divider\r\n                    sx={{ mt: 5 }}\r\n                />\r\n\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    component=\"h2\"\r\n                    sx={{\r\n                        mt: 5,\r\n                        color: \"gray\"\r\n                    }}\r\n                >\r\n                    Navegue por Tipo de Mídia\r\n                </Typography>\r\n\r\n                <Box\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        mt: 2,\r\n                    }}\r\n                >\r\n                    <Link to={`/results?term=${search}&media=livro`}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<Book />}\r\n                            onClick={() => setMidia(\"livro\")}\r\n                            sx={{\r\n                                boxShadow: \"none\",\r\n                                width: 200,\r\n                                margin: 1,\r\n                                backgroundColor: \"#BECBEA\",\r\n                                color: \"#0C2D8A\",\r\n                                '&:hover': {\r\n                                    backgroundColor: \"#0C2D8A\",\r\n                                    color: \"#BECBEA\",\r\n                                    boxShadow: \"none\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            Livro\r\n                        </Button>\r\n                    </Link>\r\n                    \r\n                    <Link to={`/results?term=${search}&media=artigo`}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<Article />}\r\n                            onClick={() => setMidia(\"artigo\")}\r\n                            sx={{\r\n                                boxShadow: \"none\",\r\n                                width: 200,\r\n                                margin: 1,\r\n                                backgroundColor: \"#BECBEA\",\r\n                                color: \"#0C2D8A\",\r\n                                '&:hover': {\r\n                                    backgroundColor: \"#0C2D8A\",\r\n                                    color: \"#BECBEA\",\r\n                                    boxShadow: \"none\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            Artigo\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <Link to={`/results?term=${search}&media=podcast`}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<Mic />}\r\n                            onClick={() => setMidia(\"podcast\")}\r\n                            sx={{\r\n                                boxShadow: \"none\",\r\n                                width: 200,\r\n                                margin: 1,\r\n                                backgroundColor: \"#BECBEA\",\r\n                                color: \"#0C2D8A\",\r\n                                '&:hover': {\r\n                                    backgroundColor: \"#0C2D8A\",\r\n                                    color: \"#BECBEA\",\r\n                                    boxShadow: \"none\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            Podcast\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <Link to={`/results?term=${search}&media=video`}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<SmartDisplay />}\r\n                            onClick={() => setMidia(\"videos\")}\r\n                            sx={{\r\n                                boxShadow: \"none\",\r\n                                width: 200,\r\n                                margin: 1,\r\n                                backgroundColor: \"#BECBEA\",\r\n                                color: \"#0C2D8A\",\r\n                                '&:hover': {\r\n                                    backgroundColor: \"#0C2D8A\",\r\n                                    color: \"#BECBEA\",\r\n                                    boxShadow: \"none\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            Vídeo\r\n                        </Button>\r\n                    </Link>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\02ListaConteudos\\ListaConteudos.jsx",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Livro.jsx",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Artigo.jsx",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Video.jsx",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\09PagMidias\\Podcast.jsx",[],[],"C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\08Editar\\Editar.jsx",["131"],[],"import { Box, Button, Stack,  Container, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Typography } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport { ArrowBackIosNew } from \"@mui/icons-material\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\nimport Tollbaradm from \"../00TollbarADM/TollbarADM\"\r\n\r\nconst Editar = () => {\r\n\r\n    const [titulo, setTitulo] = useState(\"\")\r\n    const [autor, setAutor] = useState(\"\")\r\n    const [descricao, setDescricao] = useState(\"\")\r\n    const [link, setLink] = useState(\"\")\r\n    const [tags, setTags] = useState({ carreira: false, fundamentosUX: false, designInteracao: false, UI: false, arquitetura: false })\r\n    const [midia, setMidia] = useState({ livro: false, artigo: false, video: false, podcast: false })\r\n\r\n\r\n    const { carreira, fundamentosUX, designInteracao, UI, arquitetura } = tags\r\n    const { livro, artigo, video, podcast } = midia\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(`http://localhost:3001/contents/retrieve/${id}`)\r\n                .then(\r\n                    (response) => {\r\n                        setTitulo(response.data.titulo)\r\n                        setAutor(response.data.autor)\r\n                        setDescricao(response.data.descricao)\r\n                        setLink(response.data.link)\r\n                        setTags(response.data.tags)\r\n                        setMidia(response.data.midia)\r\n                    }\r\n                )\r\n                .catch(error => console.log(error))\r\n        }\r\n        ,\r\n        []\r\n    )\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const conteudo = { titulo, autor, descricao, link, tags, midia }\r\n        axios.put(`http://localhost:3001/contents/update/${id}`, conteudo)\r\n            .then(\r\n                (response) => {\r\n                    alert(`Conteúdo  ${response.data._id} atualizado com sucesso!`)\r\n                    navigate(\"/ADM/ListaConteudos\")\r\n                }\r\n            )\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    function handleCheckBoxTags(event) {\r\n        setTags(\r\n            {\r\n                ...tags,\r\n                [event.target.name]: event.target.checked\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleCheckBoxMidia(event) {\r\n        setMidia(\r\n            {\r\n                ...midia,\r\n                [event.target.name]: event.target.checked\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tollbaradm />\r\n\r\n            <Container\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n\r\n                <Link to=\"/ADM/ListaConteudos\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"medium\"\r\n                        startIcon={<ArrowBackIosNew />}\r\n                        sx={{\r\n                            mr: 70,\r\n                            mt: 5,\r\n                            color: \"#131313\"\r\n                        }}\r\n                    >\r\n                        Voltar\r\n                    </Button>\r\n                </Link>\r\n\r\n\r\n                <Typography variant=\"h4\" fontWeight=\"bold\" mt={2}>\r\n                    Editar Conteúdo: {titulo}\r\n                </Typography>\r\n\r\n                <Box\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit}\r\n                    mt={5}\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"titulo\"\r\n                        label=\"Título\"\r\n                        name=\"titulo\"\r\n                        onChange={(event) => setTitulo(event.target.value)}\r\n                        value={titulo}\r\n                        sx={{\r\n                            width: 640,\r\n                            my: 2,\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"autor\"\r\n                        label=\"Autor\"\r\n                        name=\"autor\"\r\n                        onChange={(event) => setAutor(event.target.value)}\r\n                        value={autor}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"descricao\"\r\n                        label=\"Descrição\"\r\n                        name=\"descricao\"\r\n                        onChange={(event) => setDescricao(event.target.value)}\r\n                        value={descricao}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"link\"\r\n                        label=\"Link\"\r\n                        name=\"link\"\r\n                        onChange={(event) => setLink(event.target.value)}\r\n                        value={link}\r\n                    />\r\n                    \r\n                    <Stack\r\n                        sx={{\r\n                            width: 640,\r\n                            backgroundColor: \"#F0F0F0\",\r\n                            borderRadius: 1,\r\n                            borderBottom: 1,\r\n                            borderColor: \"#8B8B8B\",\r\n                            my: 2,\r\n                        }}\r\n                    >\r\n\r\n\r\n\r\n                    <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                        <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Tags</FormLabel>\r\n                        <FormGroup>\r\n                            <FormControlLabel control={<Checkbox checked={carreira} name=\"carreira\" onChange={handleCheckBoxTags} />} label=\"Carreira\" />\r\n                            <FormControlLabel control={<Checkbox checked={fundamentosUX} name=\"fundamentosUX\" onChange={handleCheckBoxTags} />} label=\"Fundamentos de UX\" />\r\n                            <FormControlLabel control={<Checkbox checked={designInteracao} name=\"designInteracao\" onChange={handleCheckBoxTags} />} label=\"Design de Interação\" />\r\n                            <FormControlLabel control={<Checkbox checked={UI} name=\"UI\" onChange={handleCheckBoxTags} />} label=\"UI Design\" />\r\n                            <FormControlLabel control={<Checkbox checked={arquitetura} name=\"arquitetura\" onChange={handleCheckBoxTags} />} label=\"Arquitetura da Informação\" />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n\r\n                    </Stack>\r\n\r\n                    <Stack\r\n                        sx={{\r\n                            width: 640,\r\n                            backgroundColor: \"#F0F0F0\",\r\n                            borderRadius: 1,\r\n                            borderBottom: 1,\r\n                            borderColor: \"#8B8B8B\",\r\n                            my: 2,\r\n                        }}\r\n                    >\r\n\r\n                    <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                        <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Tipo de Mídia</FormLabel>\r\n                        <FormGroup>\r\n                            <FormControlLabel control={<Checkbox checked={livro} name=\"livro\" onChange={handleCheckBoxMidia} />} label=\"Livro\" />\r\n                            <FormControlLabel control={<Checkbox checked={artigo} name=\"artigo\" onChange={handleCheckBoxMidia} />} label=\"Artigo\" />\r\n                            <FormControlLabel control={<Checkbox checked={video} name=\"video\" onChange={handleCheckBoxMidia} />} label=\"Video\" />\r\n                            <FormControlLabel control={<Checkbox checked={podcast} name=\"podcast\" onChange={handleCheckBoxMidia} />} label=\"Podcast\" />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n\r\n                     </Stack>\r\n\r\n                    <Box sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        mt: 2\r\n                    }}>\r\n                        <Link to=\"/ADM/ListaConteudos\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                sx={{\r\n                                    mx: 2,\r\n                                    color: \"#0C2D8A\",\r\n                                    borderColor: \"#0C2D8A\",\r\n                                }}\r\n                            >\r\n                                Cancelar\r\n                            </Button>\r\n                        </Link>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            sx={{\r\n                                mb: 2,\r\n                                backgroundColor: \"#0C2D8A\",\r\n                                color: \"#BECBEA\",\r\n                                boxShadow: 0,\r\n                                '&:hover': {\r\n                                    backgroundColor: \"#BECBEA\",\r\n                                    color: \"#0C2D8A\",\r\n                                    boxShadow: 0,\r\n                                },\r\n                            }}\r\n                        >\r\n                            Atualizar\r\n                        </Button>\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Editar","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\05ListaADM\\ListaConteudosADM.jsx",["132","133","134","135"],[],"import {Button, Box, Container, InputAdornment, TextField, Typography, FormControl, InputLabel, Select, MenuItem, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, IconButton } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { Link, useNavigate} from \"react-router-dom\";\r\nimport Tollbaradm from \"../00TollbarADM/TollbarADM\";\r\nimport axios from \"axios\";\r\n\r\nconst ConteudoADM = () => {\r\n\r\n    const [conteudos, setConteudos] = useState([]);\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(\"http://localhost:3001/contents/list\")\r\n            .then(\r\n                (response)=>{\r\n                    setConteudos(response.data)\r\n                }\r\n            )\r\n            .catch(error=>console.log(\"error\"))\r\n        }\r\n        ,\r\n        []\r\n    )\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const searchTerm = search.trim();\r\n        navigate(`/results?term=${searchTerm}`);\r\n      };\r\n\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    function excluirConteudo(id) {\r\n        if(window.confirm(\"Deseja Excluir? \" + id)){\r\n            axios.delete(`http://localhost:3001/contents/delete/${id}`)\r\n            .then(\r\n                (response)=>{\r\n                    const resultado = conteudos.filter( conteudo => conteudo._id !== id)\r\n                    setConteudos(resultado)\r\n                }\r\n            )\r\n            .catch(error=>console.log(error))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tollbaradm />\r\n\r\n            <Container\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"Center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h4\"\r\n                    fontWeight={500}\r\n                    mt={10}\r\n                >\r\n                    Visualizar Conteúdos\r\n                </Typography>\r\n\r\n                <Box\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        mt: 5,\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        id=\"search\"\r\n                        type=\"search\"\r\n                        label=\"Pesquisar Conteúdo\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                        sx={{ width: 650 }}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Button\r\n                                            sx={{ height: 55 }}\r\n                                            onClick={handleSubmit}\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </Button>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n\r\n                    <Link to=\"/ADM/Cadastrar\">\r\n                        <Button\r\n                            size=\"small\"\r\n                            sx={{\r\n                                height: 55,\r\n                                backgroundColor: \"#0C2D8A\",\r\n                                color: \"#BECBEA\",\r\n                                '&:hover': {\r\n                                    backgroundColor: \"#BECBEA\",\r\n                                    color: \"#0C2D8A\",\r\n                                },\r\n                                mx: 2,\r\n                                px: 2,\r\n                            }}\r\n                        >\r\n                            Cadastrar Conteúdo\r\n                        </Button>\r\n                    </Link>\r\n                </Box>\r\n\r\n                <Container\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        my: 5,\r\n                    }}\r\n                >\r\n\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Título</TableCell>\r\n                                    <TableCell align=\"left\">Autor</TableCell>\r\n                                    <TableCell align=\"left\">Descrição</TableCell>\r\n                                    {/* <TableCell align=\"left\">URL</TableCell> */}\r\n                                    <TableCell align=\"left\">Editar</TableCell>\r\n                                    <TableCell align=\"left\">Excluir</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {conteudos.map((conteudo) => (\r\n                                    <TableRow\r\n                                        key={conteudo.titulo}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {conteudo.titulo}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">{conteudo.autor}</TableCell>\r\n                                        <TableCell align=\"left\">{conteudo.descricao}</TableCell>\r\n                                        {/* <TableCell align=\"left\">{conteudo.link}</TableCell> */}\r\n                                        <TableCell align=\"center\">\r\n                                            <Link to={`/ADM/Editar/${conteudo._id}`}>\r\n                                                <IconButton aria-label=\"editar\"><Edit /></IconButton>\r\n                                            </Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\"><IconButton aria-label=\"deletar\" onClick={() => excluirConteudo(conteudo._id)}><Delete /></IconButton></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConteudoADM","C:\\Users\\lcsam\\Desktop\\RediUX-V0-Front\\src\\components\\00ToolbarU\\Toolbar.jsx",[],[],{"ruleId":"136","severity":1,"message":"137","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":43,"column":9,"nodeType":"142","endLine":43,"endColumn":11,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":68,"column":10,"nodeType":"142","endLine":68,"endColumn":12,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"146","line":4,"column":16,"nodeType":"138","messageId":"139","endLine":4,"endColumn":27},{"ruleId":"136","severity":1,"message":"147","line":10,"column":53,"nodeType":"138","messageId":"139","endLine":10,"endColumn":73},{"ruleId":"136","severity":1,"message":"148","line":19,"column":12,"nodeType":"138","messageId":"139","endLine":19,"endColumn":18},{"ruleId":"136","severity":1,"message":"149","line":21,"column":13,"nodeType":"138","messageId":"139","endLine":21,"endColumn":21},{"ruleId":"136","severity":1,"message":"150","line":21,"column":23,"nodeType":"138","messageId":"139","endLine":21,"endColumn":36},{"ruleId":"136","severity":1,"message":"151","line":21,"column":38,"nodeType":"138","messageId":"139","endLine":21,"endColumn":53},{"ruleId":"136","severity":1,"message":"152","line":21,"column":55,"nodeType":"138","messageId":"139","endLine":21,"endColumn":57},{"ruleId":"136","severity":1,"message":"153","line":21,"column":59,"nodeType":"138","messageId":"139","endLine":21,"endColumn":70},{"ruleId":"136","severity":1,"message":"154","line":22,"column":13,"nodeType":"138","messageId":"139","endLine":22,"endColumn":18},{"ruleId":"136","severity":1,"message":"155","line":22,"column":20,"nodeType":"138","messageId":"139","endLine":22,"endColumn":26},{"ruleId":"136","severity":1,"message":"156","line":22,"column":28,"nodeType":"138","messageId":"139","endLine":22,"endColumn":33},{"ruleId":"136","severity":1,"message":"157","line":22,"column":35,"nodeType":"138","messageId":"139","endLine":22,"endColumn":42},{"ruleId":"136","severity":1,"message":"158","line":24,"column":11,"nodeType":"138","messageId":"139","endLine":24,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":44,"column":9,"nodeType":"142","endLine":44,"endColumn":11,"suggestions":"159"},{"ruleId":"136","severity":1,"message":"158","line":12,"column":11,"nodeType":"138","messageId":"139","endLine":12,"endColumn":19},{"ruleId":"136","severity":1,"message":"160","line":13,"column":12,"nodeType":"138","messageId":"139","endLine":13,"endColumn":17},{"ruleId":"136","severity":1,"message":"161","line":19,"column":11,"nodeType":"138","messageId":"139","endLine":19,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":41,"column":9,"nodeType":"142","endLine":41,"endColumn":11,"suggestions":"162"},{"ruleId":"136","severity":1,"message":"163","line":1,"column":72,"nodeType":"138","messageId":"139","endLine":1,"endColumn":83},{"ruleId":"136","severity":1,"message":"164","line":1,"column":85,"nodeType":"138","messageId":"139","endLine":1,"endColumn":95},{"ruleId":"136","severity":1,"message":"165","line":1,"column":97,"nodeType":"138","messageId":"139","endLine":1,"endColumn":103},{"ruleId":"136","severity":1,"message":"166","line":1,"column":105,"nodeType":"138","messageId":"139","endLine":1,"endColumn":113},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'setGlobalState'. Either include it or remove the dependency array.",["168"],"'useNavigate' is defined but never used.","'uploadBytesResumable' is defined but never used.","'imgUrl' is assigned a value but never used.","'carreira' is assigned a value but never used.","'fundamentosUX' is assigned a value but never used.","'designInteracao' is assigned a value but never used.","'UI' is assigned a value but never used.","'arquitetura' is assigned a value but never used.","'livro' is assigned a value but never used.","'artigo' is assigned a value but never used.","'video' is assigned a value but never used.","'podcast' is assigned a value but never used.","'navigate' is assigned a value but never used.",["169"],"'midia' is assigned a value but never used.","'handleMidiaChange' is assigned a value but never used.",["170"],"'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"171","fix":"175"},{"desc":"171","fix":"176"},"Update the dependencies array to be: [id]",{"range":"177","text":"178"},"Update the dependencies array to be: [setGlobalState]",{"range":"179","text":"180"},{"range":"181","text":"178"},{"range":"182","text":"178"},[1888,1890],"[id]",[2124,2126],"[setGlobalState]",[1876,1878],[1739,1741]]